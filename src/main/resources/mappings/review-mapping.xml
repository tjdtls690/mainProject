<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="WriteReviewDAO">
	<!-- resultMap 은 join 구문을 써서 VO클래스에 매핑이 불가능 할 시 -->
	<!-- 직접 프로퍼티 하나하나 매핑 시켜주는 역할 -->
	<!-- 지금 같은 상황에선 안써도 되지만 연습삼아 쓴다. -->
	<!-- seq(reviewNym), itemNum, title -->
	<resultMap type="myreview" id="reviewResult01">
		<id property="seq" column="seq" />
		<result property="item_code" column="item_code" />
		<result property="star" column="star" />
		<result property="user_name" column="user_name" />
		<result property="content" column="content" />
		<result property="write_date" column="write_date" />
		<result property="image" column="image" />
		<result property="reply" column="reply" />
	</resultMap>
	<resultMap type="myreview" id="reviewResult02">
		<id property="seq" column="seq" />
		<result property="item_code" column="subscribe_code" />
		<result property="star" column="star" />
		<result property="user_name" column="user_name" />
		<result property="content" column="content" />
		<result property="write_date" column="write_date" />
		<result property="image" column="image" />
		<result property="reply" column="reply" />
	</resultMap>
	<insert id="insertReview" parameterType="myreview">
		INSERT INTO reviewboard(item_code, star, user_name, content, image, payment_item_mapping_code)
		VALUES(#{item_code}, #{star}, #{user_name}, #{content}, #{image}, #{payment_item_mapping_code})
	</insert>
	<insert id="insertSubReview" parameterType="myreview">
		INSERT INTO reviewboard(subscribe_code, star, user_name, content, image, payment_item_mapping_code)
		VALUES(#{subscribe_code}, #{star}, #{user_name}, #{content}, #{image}, #{payment_item_mapping_code})
	</insert>
	<update id="updateReview" parameterType="myreview">
		UPDATE reviewboard
		SET content=#{content} WHERE seq = #{seq}
	</update>
	<update id="updateReviewModify" parameterType="myreview">
		UPDATE reviewboard
		SET star = #{star}, content = #{content}, image = #{image} WHERE seq = #{seq}
	</update>
	<delete id="deleteReview" parameterType="myreview">
		DELETE FROM reviewboard WHERE seq = #{seq}
	</delete>
	<select id="getReview" resultType="myreview">
		SELECT * FROM reviewboard WHERE seq = #{seq}
	</select>
	<!-- 리턴값이 그냥 VO 값으로 넘어가면 resultType 을 쓰지만 -->
	<!-- resultMap을 써야하는 경우 resultMap 속성을 써줘야 한다. -->
	<!-- parameterType은 생략 가능 -->
	<select id="getReviewList01" resultMap="reviewResult01">
		SELECT * FROM reviewboard where item_code = ${item_code}
		ORDER BY seq DESC
	</select>
	<select id="getReviewList02" resultMap="reviewResult02">
		SELECT * FROM reviewboard where subscribe_code = ${subscribe_code}
		ORDER BY seq DESC
	</select>
<!-- 	페이징처리  -->
<!-- 	각각 2 라고 추가된 id 들은 구독용 처리 -->
	<select id="selectBoardList" resultType="hashmap" parameterType="hashmap">
        SELECT * FROM reviewboard WHERE item_code = #{item_code}
        ORDER BY seq DESC LIMIT #{pageStart}, #{perPageNum}
	</select>
	<select id="selectBoardList2" resultType="hashmap" parameterType="hashmap">
        SELECT * FROM reviewboard WHERE subscribe_code = #{item_code}
        ORDER BY seq DESC LIMIT #{pageStart}, #{perPageNum}
	</select>
	<select id="countBoardList" resultType="Integer">
        SELECT count(*) FROM reviewboard WHERE item_code = #{item_code}
	</select>
	<select id="countBoardList2" resultType="Integer">
        SELECT count(*) FROM reviewboard WHERE subscribe_code = #{item_code}
	</select>
	<select id="getPaymentItemMappingCodeReview" resultType="myReview">
        SELECT * FROM reviewboard WHERE payment_item_mapping_code = #{payment_item_mapping_code}
	</select>
</mapper>